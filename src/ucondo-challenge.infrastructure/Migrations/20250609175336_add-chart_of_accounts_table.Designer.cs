// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ucondo_challenge.infrastructure;

#nullable disable

namespace ucondo_challenge.infrastructure.Migrations
{
    [DbContext(typeof(UCondoChallengeDbContext))]
    [Migration("20250609175336_add-chart_of_accounts_table")]
    partial class addchart_of_accounts_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ucondo_challenge.business.Entities.ChartOfAccountsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowEntries")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentId1")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId1");

                    b.ToTable("ChartOfAccounts");
                });

            modelBuilder.Entity("ucondo_challenge.business.Entities.ChartOfAccountsEntity", b =>
                {
                    b.HasOne("ucondo_challenge.business.Entities.ChartOfAccountsEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId1");

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
